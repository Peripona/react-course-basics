{"version":3,"sources":["Components/Card/Card.tsx","Components/CardList/CardList.tsx","Components/Header/Header.tsx","Components/SearchBar/SearchBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","src","user","id","alt","name","email","CardList","users","map","Header","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","response","json","data","this","filteredUsers","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAWeA,EARF,SAACC,GAAD,OACT,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BAAiEC,IAAKL,EAAMG,KAAKG,OACzF,oBAAIL,UAAU,UAAd,SAAyBD,EAAMG,KAAKG,OACpC,mBAAGL,UAAU,UAAb,SAAwBD,EAAMG,KAAKI,YCE5BC,G,MALE,SAACR,GAAD,OAAiB,qBAAKC,UAAU,YAAf,SAC7BD,EAAMS,MAAMC,KAAI,SAACP,GAAD,OAAc,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCMpCO,G,MARA,SAACX,GACZ,OACI,qBAAKC,UAAU,SAAf,SACI,4CCaGW,EAZG,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAC/B,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbT,GAAG,YACHH,UAAU,aACVe,SAAUF,KCoCDG,E,kDAjCb,WAAYjB,GAAa,IAAD,8BACtB,cAAMA,IAaRc,aAAe,SAACI,GACd,EAAKC,SAAS,CACZC,OAAQF,EAAEG,OAAOC,SAdnB,EAAKC,MAAQ,CACXd,MAAO,GACPW,OAAQ,IAJY,E,qDAQxB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEV,MAAOmB,S,oBAS3C,WAAU,IAAD,EACiBC,KAAKN,MAAtBd,EADA,EACAA,MAAOW,EADP,EACOA,OACRU,EAAiBrB,EAAMsB,QAAO,SAAA5B,GAAI,OAAIA,EAAKG,KAAK0B,cAAcC,SAASb,EAAOc,wBACpF,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWY,YAAY,GAAGC,aAAce,KAAKf,eAC7C,cAAC,EAAD,CAAUL,MAAOqB,W,GA5BPK,aCFHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c65d24e.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css';\n\nconst Card = (props:any) => (\n    <div className=\"card\">\n        <img src={`https://robohash.org/${props.user.id}?set=set1&size=180x180`} alt={props.user.name} />\n        <h2 className=\"elipsis\">{props.user.name}</h2>\n        <p className=\"elipsis\">{props.user.email}</p>\n    </div>\n);\n\nexport default Card;","import React from 'react'\nimport Card from '../Card/Card';\nimport './CardList.css';\n\nconst CardList = (props: any) => (<div className=\"card-list\">\n    {props.users.map((user:any) => <Card key={user.id} user={user} />)}\n    </div>\n)\n\nexport default CardList;","import React from 'react'\nimport './Header.css';\n\nconst Header = (props: any) => {\n    return (\n        <div className=\"header\">\n            <h1>Header</h1>\n        </div>\n    )\n}\n\nexport default Header;","import React, { ChangeEvent } from \"react\";\n\ntype propsType = {\n    placeholder: string,\n    handleChange: (event: ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst SearchBar = ({placeholder, handleChange}: propsType) => {\n  return (\n    <input\n      type=\"search\"\n      placeholder={placeholder}\n      id=\"searchBar\"\n      className=\"search-bar\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBar;","import React, { ChangeEvent, Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./Components/CardList/CardList\";\nimport Header from \"./Components/Header/Header\";\nimport SearchBar from \"./Components/SearchBar/SearchBar\";\n\ntype user = {\n  name: string,\n  email: string\n}\n\ntype AppState = {\n  users: Array<user>,\n  search: string\n}\n\nclass App extends Component<{}, AppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      users: [],\n      search: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ users: data }));\n  }\n\n  handleChange = (e: ChangeEvent<HTMLInputElement>)  => {\n    this.setState({\n      search: e.target.value\n    });\n  }\n\n  render() {\n    const {users, search} = this.state;\n    const filteredUsers =  users.filter(user => user.name.toLowerCase().includes(search.toLocaleLowerCase()));\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchBar placeholder=\"\" handleChange={this.handleChange}/>\n        <CardList users={filteredUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}